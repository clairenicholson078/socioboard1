<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Api.Socioboard</name>
    </assembly>
    <members>
        <member name="M:Api.Socioboard.Controllers.AffiliatesController.AddAffiliate(System.Int64,System.Int64,System.Double)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="friendId"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.BoardMeController.createBoard(System.String,System.String,System.String,System.String,System.String,System.Int64)">
            <summary>
            Creates a board with porvided hash Tags
            </summary>
            <param name="boardName">Name of the board should be unique</param>
            <param name="fbHashTag"> hash tag on facebook</param>
            <param name="twitterHashTag">hash tag on twitter</param>
            <param name="instagramHashTag"> hash tag on instagram</param>
            <param name="gplusHashTag">hash tag on gplus</param>
            <param name="userId">id of the user to which board belongs to </param>
            <returns>success : if board created successfully, board Exist: if board name already exists  </returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.BoardMeController.DeleteBoard(System.String,System.Int64)">
            <summary>
            Deletes the board with specified board Id
            </summary>
            <param name="BoardId"> id of the board to delte</param>
            <param name="userId">id of the user to which board belongs to.</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.BoardMeController.UndoDeleteBoard(System.String,System.Int64)">
            <summary>
            Revert back deletion opertion of board
            </summary>
            <param name="BoardId">id of the board which needs to revert delete</param>
            <param name="userId"> id of the user which board belongs to.</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.BoardMeController.getUserBoards(System.Int64)">
            <summary>
            To get all boards associated with user
            </summary>
            <param name="userId">coorsponding userId</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.DiscoveryController.DiscoverySearchTwitter(System.Int64,System.Int64,System.String)">
            <summary>
            Use for searching the customer which is linked with keyword 
            </summary>
            <param name="userId">Id of user</param>
            <param name="groupId">Id of the group to which account is to be added. </param>
            <param name="keyword">provided by the user for searcing new customer or post related to keyword</param>
            <returns></returns>
            <response code="500">Internal Server Erro.r</response>
        </member>
        <member name="M:Api.Socioboard.Controllers.DraftMessageController.GetAllUserDraftMessages(System.Int64,System.Int64)">
            <summary>
            Get All The Draft Messages of User
            </summary>
            <param name="userId"> Id of the user. </param>
            <response code="500">Internal Server Erro.r</response>
        </member>
        <member name="M:Api.Socioboard.Controllers.FacaebookPageReportsController.GetFacebookPageReportData(System.String,System.Int32)">
            <summary>
            To provide the report on facebook page.
            </summary>
            <param name="profileId">Profile id of user</param>
            <param name="daysCount">To prepare report in a given counted days provided by the user</param>
            <returns></returns>
            <response code="500">Internal Server Erro.r</response>
        </member>
        <member name="M:Api.Socioboard.Controllers.FacebookController.AddFacebookAccount(System.String,System.Int64,System.Int64)">
            <summary>
            Add new Facebook Account
            </summary>
            <param name="accessToken"> Token obtained after successfull authentication from facebook. </param>
            <param name="groupId"> Id of the group to which account is to be added. </param>
            <param name="userId"> Id of the user. </param>
            <remarks>Add new facebook account.</remarks>
            <response code="400">Invalid Access Token.</response>
            <response code="500">Internal Server Erro.r</response>
        </member>
        <member name="M:Api.Socioboard.Controllers.FacebookController.GetFeeds(System.String,System.Int64,System.Int32,System.Int32)">
            <summary>
            Get feeds of a facebook profile  
            </summary>
            <param name="profileId"> Token obtained after successfull authentication from facebook. </param>
            <param name="userId"> Id of the user </param>
            <param name="skip"> Id of the group to which account is to be added. </param>
            <param name="count"> Id of the group to which account is to be added. </param>
            <remarks>Insert new student</remarks>
            <response code="400">Invalid Access Token</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Api.Socioboard.Controllers.GoogleAnalyticsReportController.GetGoogleAnalyticsReportData(System.String,System.Int32)">
            <summary>
            To provide the report on website traffic.
            </summary>
            <param name="profileId">Id of the user</param>
            <param name="daysCount">for preparing report till counted days</param>
            <response code="500">Internal Server Erro.r</response>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Api.Socioboard.Controllers.GoogleController.GoogleLogin(System.String)" -->
        <member name="M:Api.Socioboard.Controllers.GroupMemberController.InviteGroupMembers(System.Int64,System.String)">
            <summary>
            To add the member of the group
            </summary>
            <param name="groupId">Id of the group from which account is to be added.</param>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.GroupProfilesController.GetGroupProfiles(System.Int64)">
            <summary>
            To get the group profiles 
            </summary>
            <param name="groupId">Id of the group from which account is to be added.</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.GroupReportController.getgroupReportData(System.Int64,System.Int32)">
            <summary>
            To provide the report on group profiles
            </summary>
            <param name="groupId"></param>
            <param name="daysCount"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.GroupsController.CreateGroup(Domain.Socioboard.Models.Groups)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.InstagramController.AddInstagramAccount(System.Int64,System.Int64,System.String)">
            <summary>
            To add instagram profile
            </summary>
            <param name="userId">Id of the user .</param>
            <param name="groupId">Id of the group to which account is to be added. </param>
            <param name="code">Code obtained after successfull authentication from Instagram</param>
            <response code="500">Internal Server Erro.r</response>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.InstagramReportsController.GetInstagramReportData(System.String,System.Int32)">
            <summary>
            To provide the report on instagaram profile
            </summary>
            <param name="profileId">profile id of user</param>
            <param name="daysCount">for preparing instagram report till counted days</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.InstagramReportsController.GetInstagramData(System.String)">
            <summary>
            To get instagram data.
            </summary>
            <param name="profileId">profile id of user </param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.LinkedInController.AddLinkedInAccount(System.String,System.Int64,System.Int64)">
            <summary>
            Add new Linkedin Account
            </summary>
            <param name="Code"> Code obtained after successfull authentication from facebook. </param>
            <param name="groupId"> Id of the group to which account is to be added. </param>
            <param name="userId"> Id of the user. </param>
            <remarks>Add new Linkedin account.</remarks>
            <response code="400">Invalid Access Token.</response>
            <response code="500">Internal Server Erro.r</response>
        </member>
        <member name="M:Api.Socioboard.Controllers.LinkedInController.GetTopCompanyPagePosts(System.String,System.Int64,System.Int32,System.Int32)">
            <summary>
            Get feeds of a linkedin comany page profile  
            </summary>
            <param name="pageId"> Token obtained after successfull authentication from linked company page id. </param>
            <param name="userId"> Id of the user </param>
            <remarks>Insert new student</remarks>
            <response code="400">Invalid Access Token</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Api.Socioboard.Controllers.RssFeedController.AddRssUrl(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userId">id of the user</param>
            <param name="groupId">Id of the group to which account is to be added. </param>
            <param name="rssUrl"></param>
            <param name="profileId"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.ShareathonController.AddPageShareathon(System.Int64,System.String,System.Int32)">
            <summary>
            To share the facebook page post with selected facebook profile in a given period of time.
            </summary>
            <param name="userId">Id of the user</param>
            <param name="FacebookPageId">facebookpage id of user facebook profile</param>
            <param name="Facebookaccountid">Facebook account id of user</param>
            <param name="Timeintervalminutes">Time interval provided by the user for posting</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.ShareathonController.AddGroupShareathon(System.Int64,System.String,System.Int32)">
            <summary>
            To group post with selected facebook profiles in a given period of time 
            </summary>
            <param name="userId">id of the user</param>
            <param name="FacebookUrl">facebook url of user</param>
            <param name="Facebookaccountid">Facebook account id of user</param>
            <param name="Timeintervalminutes">Time interval provided by the user</param>
            <param name="FacebookGroupId">FacebookGroup id of user facebook profile</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.SocialMessagesController.ComposeMessage(System.String,System.String,System.Int64,System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            To compose message
            </summary>
            <param name="message">message provided by the user for posting</param>
            <param name="profileId">id of profiles of the user</param>
            <param name="userId">id of the user</param>
            <param name="imagePath">path for taking image</param>
            <param name="link"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.TaskController.AddTask(Domain.Socioboard.ViewModels.TasksViewModel)">
            <summary>
            
            </summary>
            <param name="tasksViewModel"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.TaskController.AddComment(Domain.Socioboard.ViewModels.CommentViewModel)">
            <summary>
            
            </summary>
            <param name="commentViewModel"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.TwitterController.AddTwitterAccount(System.Int64,System.Int64,System.String,System.String,System.String,System.Boolean)">
            <summary>
            To add twitter account
            </summary>
            <param name="userId">Id of user</param>
            <param name="groupId">Id of the group to which account is to be added.</param>
            <param name="requestToken"></param>
            <param name="requestSecret"></param>
            <param name="requestVerifier"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.TwitterReportsController.GetTwitterReports(System.String,System.Int32)">
            <summary>
            To give report on twitter
            </summary>
            <param name="profileId">Id of the user</param>
            <param name="daysCount">preparing the report till given counted days</param>
            <response code="500">Internal Server Erro.r</response>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.Register(Domain.Socioboard.Models.User)">
            <summary>
            To register the new user.
            </summary>
            <param name="user">data of the user for registration</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.Login(Domain.Socioboard.ViewModels.UserLoginViewModel)">
            <summary>
            To login page.
            </summary>
            <param name="user">User login details :EmailId and password</param>
            <returns>Success:user can login successfully ,Failure: entered wrong password or EmailId does not exist</returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.IsEmailExst(System.String)">
            <summary>
            To check EmailId exist or not.
            </summary>
            <param name="Email">Email id of user</param>
            <returns>Success: if EmailId exist in db,Failure: if EmailId does not exist in db</returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.GetUser(System.Int64)">
            <summary>
            To get the user datails.
            </summary>
            <param name="Id">id of the user </param>
            <returns>
            1. success: if the user id is exist in db.
            2. failure: if user id does not exist in db
            </returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.VerifyEmail(System.Int64,System.String)">
            <summary>
            For varifying the emailId after registration
            </summary>
            <param name="Id"> Id of the user</param>
            <param name="Token">Generated token id after registration </param>
            <returns>Account Activated:if token id exist in user db 
            Failed to Activate:if user details does not update.
            Link Expired:if user does not activate his account in a given expire time.
            Wrong Link:when user use false link or unautorize link.
            </returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.FacebookLogin(System.String)">
            <summary>
            To validate the access token before login facebook
            </summary>
            <param name="AccessToken">Code obtained after successfull authentication from facebook.</param>
            <returns>Success:added su</returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.GetUserProfileCount(System.Int64)">
            <summary>
            To count the user profiles .
            </summary>
            <param name="userId">Id of the user</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.ChangesmtpClientPassword(System.Int64,System.String,System.String,System.String)">
            <summary>
            To change the password when user request it.
            </summary>
            <param name="userId">id of the user</param>
            <param name="currentsmtpClientPassword">password which is using currently</param>
            <param name="newsmtpClientPassword">A new password given by the user</param>
            <param name="conformsmtpClientPassword">confirm password </param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.ForgotsmtpClientPasswordSendMail(System.String)">
            <summary>
            To send the mail to user :for reseting the password when user forgot it and request for change.
            </summary>
            <param name="emailId">User email id</param>
            <returns>Eemail sent successfully:when email id existin db,
            Emaild does not exist or falil to send:email does not exist in db
            </returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.validateforgotpwdToken(System.String,System.String)">
            <summary>
            To validate the tokenId after getting forgot password mail.
            </summary>
            <param name="emailId">User email id</param>
            <param name="accessToken">Forgot token id </param>
            <returns>You can change the password:when tokane validate successfully.
            Link expired:when user does not change the password for given period. 
            Wrong link: when user use unauthorize link
            Email Id does not exist: When email id does not exist in db.
            </returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.ResetsmtpClientPasswordMail(System.String,System.String,System.String)">
            <summary>
            sending mail to user after reseting the password.
            </summary>
            <param name="emailId">User email id </param>
            <param name="changesmtpClientPassword">changed password</param>
            <param name="token">Forgot password token</param>
            <returns>smtpClientPassword changed successfully:if user data present in db and validate token.
            EmailId does not exist:when user emailid does not exist
            </returns>
        </member>
        <member name="M:Api.Socioboard.Controllers.UserController.DemoRequest(Domain.Socioboard.Models.DemoRequest)">
            <summary>
            when user request for demo enterprise. 
            </summary>
            <param name="demoRequest">user data for demo enterprise</param>
            <returns>EmailId exist: if user already resisterd.
            Mail Sent Successfully:if mail sent successfully to user given mailid.
            Demo requested added:if successfully added the user for demo enterprise
            </returns>
        </member>
        <member name="T:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues">
            <summary>
            There are several query Parameters that are optional this will allow you to send the ones you want.
            </summary>
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues.Dimensions">
            <summary>
            A list of comma-separated dimensions for your Analytics data, such as ga:browser,ga:city. 
            Documentation: https://developers.google.com/analytics/devguides/reporting/core/v3/reference#dimensions
            </summary>            
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues.Filter">
            <summary>
            Dimension or metric filters that restrict the data returned for your request. 
            Documentation: https://developers.google.com/analytics/devguides/reporting/core/v3/reference#filters
            </summary>
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues.Sort">
            <summary>
            A list of comma-separated dimensions and metrics indicating the sorting order and sorting direction for the returned data. 
            Documentation:  https://developers.google.com/analytics/devguides/reporting/core/v3/reference#sort
            </summary>
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues.Segment">
            <summary>            
            Segments the data returned for your request. 
            Documentation: https://developers.google.com/analytics/devguides/reporting/core/v3/reference#segment
            </summary>
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues.MaxResults">
            <summary>
            The maximum number of rows to include in the response. max is 10000
            </summary>
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues.Sampling">
            <summary>
            The desired sampling level. 
            Allowed Values: 
            •DEFAULT — Returns response with a sample size that balances speed and accuracy.
            •FASTER — Returns a fast response with a smaller sample size.
            •HIGHER_PRECISION — Returns a more accurate response using a large sample size, but this may result in the response being slower.
            Documentation: https://developers.google.com/analytics/devguides/reporting/core/v3/reference#samplingLevel
            </summary>
        </member>
        <member name="M:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues.#ctor">
            <summary>
            Constructor sets up the default values, for things that can't be null.
            </summary>
        </member>
        <member name="M:Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.Get(Google.Apis.Analytics.v3.AnalyticsService,System.String,System.String,System.String,System.String,Api.Socioboard.Helper.GoogleAnaltyicsReportingHelper.OptionalValues)">
            <summary>
            You query the Core Reporting API for Google Analytics report data. 
            Documentation: https://developers.google.com/analytics/devguides/reporting/core/v3/reference
            
            Dimension and metric reference : https://developers.google.com/analytics/devguides/reporting/core/dimsmets
            </summary>
            <param name="service">Valid Authenticated AnalyticsServicve </param>
            <param name="ProfileId">The unique table ID of the form XXXX, where XXXX is the Analytics view (profile) ID for which the query will retrieve the data. </param>
            <param name="StartDate">Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or NdaysAgo where N is a positive integer). </param>
            <param name="EndDate">End date for fetching Analytics data. Request can specify an end date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or NdaysAgo where N is a positive integer). </param>
            <param name="Metrics">A list of comma-separated metrics, such as ga:sessions,ga:bounces. </param>
            <param name="optionalValues">Optional values can be null </param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Helper.GoogleAnalyticsAuthenticationHelper.AuthenticateOauth(System.String,System.String,System.String)">
            <summary>
            Authenticate to Google Using Oauth2
            Documentation https://developers.google.com/accounts/docs/OAuth2
            </summary>
            <param name="clientId">From Google Developer console https://console.developers.google.com</param>
            <param name="clientSecret">From Google Developer console https://console.developers.google.com</param>
            <param name="smtpClientUserName">A string used to identify a user.</param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Helper.GoogleAnalyticsAuthenticationHelper.AuthenticateServiceAccount(System.String,System.String)">
            <summary>
            Authenticating to Google using a Service account
            Documentation: https://developers.google.com/accounts/docs/OAuth2#serviceaccount
            </summary>
            <param name="serviceAccountEmail">From Google Developer console https://console.developers.google.com</param>
            <param name="keyFilePath">Location of the Service account key file downloaded from Google Developer console https://console.developers.google.com</param>
            <returns></returns>
        </member>
        <member name="T:Api.Socioboard.Helper.GoogleAnalyticsRealTimeHelper.OptionalValues">
            <summary>
            There are several query Parameters that are optional this will allow you to send the ones you want.
            </summary>
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnalyticsRealTimeHelper.OptionalValues.Dimensions">
            <summary>
            A list of comma-separated dimensions for your Analytics data, such as ga:browser,ga:city. 
            Documentation: https://developers.google.com/analytics/devguides/reporting/core/v3/reference#dimensions
            </summary>            
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnalyticsRealTimeHelper.OptionalValues.Filter">
            <summary>
            Dimension or metric filters that restrict the data returned for your request. 
            Documentation: https://developers.google.com/analytics/devguides/reporting/core/v3/reference#filters
            </summary>
        </member>
        <member name="P:Api.Socioboard.Helper.GoogleAnalyticsRealTimeHelper.OptionalValues.Sort">
            <summary>
            A list of comma-separated dimensions and metrics indicating the sorting order and sorting direction for the returned data. 
            Documentation:  https://developers.google.com/analytics/devguides/reporting/core/v3/reference#sort
            </summary>
        </member>
        <member name="M:Api.Socioboard.Helper.GoogleAnalyticsRealTimeHelper.OptionalValues.#ctor">
            <summary>
            Constructor sets up the default values, for things that can't be null.
            </summary>
        </member>
        <member name="M:Api.Socioboard.Helper.GoogleAnalyticsRealTimeHelper.Get(Google.Apis.Analytics.v3.AnalyticsService,System.String,System.String,Api.Socioboard.Helper.GoogleAnalyticsRealTimeHelper.OptionalValues)">
            <summary>
            Returns real-time Google Analytics data for a view (profile).
            https://developers.google.com/analytics/devguides/reporting/realtime/v3/reference/data/realtime/get
            
            
            Beta:
            The Real Time Reporting API is currently available as a developer preview in limited beta. If you're interested in signing up, request access to the beta.
            https://docs.google.com/forms/d/1qfRFysCikpgCMGqgF3yXdUyQW4xAlLyjKuOoOEFN2Uw/viewform
            Apply for access wait 24 hours and then try you will not hear from Google when you have been approved. 
            
            Documentation: Dimension and metric reference https://developers.google.com/analytics/devguides/reporting/realtime/dimsmets/
            </summary>
            <param name="service">Valid authenticated Google analytics service</param>
            <param name="profileId">Profile id to request data from </param>
            <param name="metrics">Valid Real time Metrics (Required)</param>
            <param name="optionalValues">Optional values can be null</param>
            <returns>https://developers.google.com/analytics/devguides/reporting/realtime/v3/reference/data/realtime#resource</returns>
        </member>
        <member name="P:Api.Socioboard.Helper.SessionFactory.configfilepath">
            <summary>
            initializes the session for database
            </summary>
            
        </member>
        <member name="M:Api.Socioboard.Helper.SessionFactory.GetSessionFactory(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            checks wheteher the session already exists. if not then creates it
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Helper.SessionFactory.GetNewSession(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            creates a database connection and opens up a session
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Repositories.BoardMeRepository.GplusRepository.AddGplusHashTag(System.String,System.String,Api.Socioboard.Helper.Cache,Api.Socioboard.Helper.AppSettings,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            create an Gplus Hash Tag and fetch all feeds with hash tag and saves in Db
            </summary>
            <param name="hashTag"> hashtag needs to search.</param>
            <param name="boardId"> board id to which we need to add the hasttag.</param>
            <param name="_redisCache"> redis cache object</param>
            <param name="settings">Application settings class </param>
            <param name="_logger"> Serial log object</param>
            <returns> gplus hashtag id.</returns>
        </member>
        <member name="M:Api.Socioboard.Repositories.BoardMeRepository.GplusRepository.AddBoardGplusTagFeeds(System.String,System.String,Api.Socioboard.Helper.Cache,Api.Socioboard.Helper.AppSettings,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="GplusTagId"></param>
            <param name="BoardId"></param>
            <param name="_redisCache"></param>
            <param name="settings"></param>
            <param name="_logger"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Socioboard.Repositories.BoardMeRepository.InstagramRepository.AddInstagramHashTag(System.String,System.String,Api.Socioboard.Helper.Cache,Api.Socioboard.Helper.AppSettings,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Adds an Instagram hashtag if not exists in db else it's returns existing hashtag Id
            </summary>
            <param name="hashTag"> hashtag needs to search.</param>
            <param name="boardId"> board id to which we need to add the hasttag.</param>
            <param name="_redisCache"> redis cache object</param>
            <param name="settings">Application settings class </param>
            <param name="_logger"> Serial log object</param>
            <returns>instagram hashtag id</returns>
        </member>
    </members>
</doc>
